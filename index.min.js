function e(e){const t="string"==typeof e?[e]:[e[0]];for(let n=1,{length:a}=arguments;n<a;n++)t.push(arguments[n],e[n]);const n=document.createElement("style");return n.type="text/css",n.appendChild(document.createTextNode(t.join(""))),document.head.appendChild(n)}let t="s"+(""+Math.random()).replace(".",""),n=1;var a=()=>t+""+ ++n;function s(e,t){e&&(e.value=t,((e,t)=>{document.documentElement.style.setProperty("--"+e,t)})(e.uid,e.value))}const o=/--([a-z]+[a-z0-9-]*)\s*(,\s*.+)*\)/gi;var l=(t,n,l=c,r)=>{a(),t.broadcast=function(e){for(const t of d)t(e)},t.handleEvent=l;let u=function(t){let n={},l={};if(t)for(const[c,r]of Object.entries(t)){n[c]=a();let t=[...r.matchAll(o)].map((e=>{return{name:e[1],value:(t=e[2],t?.replace(/\s|,/g,"")||""),uid:a()};var t})),u=r;for(const{name:e,value:n,uid:a}of t){l[e]={value:n,uid:a},console.log(e,n,a);const t=new RegExp("--"+c);u=u.replace(t,"--"+a),s(l[e],n)}e`
                .${n[c]} {
                    ${u}
                }
            `}return{classNameToUid:n,setCssVariable:(e,t)=>s(l[e],t)}}(r);t.style=r?u.classNameToUid:{};let d=[];return{info(){},render:()=>n(t,t.style),update(e){Object.assign(t,e)},state:()=>function(e){const t=Object.assign({},e);return delete t.handleEvent,delete t.broadcast,t}(t),style:(e,t)=>u.setCssVariable(e,t),bind(e){"function"==typeof e&&d.push(e)}}};function c(){}export{l as default};
