let e="sticky_"+(""+Math.random()).replace(".",""),t=1;var n=()=>e+""+ ++t;const o=n(),s=new WeakMap;
/*! (c) Andrea Giammarchi - ISC */const r=new class{constructor(){s.set(this,{v:new Map,f:new Map})}all(e,t){const{v:n,f:o}=s.get(this);o.has(e)||o.set(e,new Set),o.get(e).add(t),n.has(e)&&Promise.resolve(n.get(e)).then(t)}drop(e){const{v:t,f:n}=s.get(this);1<arguments.length?n.has(e)&&n.get(e).delete(arguments[1]):(t.delete(e),n.delete(e))}that(e){if(!(1<arguments.length))return t=>this.that(e,t);{const t=arguments[1],{v:n,f:o}=s.get(this);if(n.set(e,t),o.has(e))for(const n of o.get(e))n(t)}}when(e){const{v:t}=s.get(this);return t.has(e)?Promise.resolve(t.get(e)):new Promise((t=>{const n=o=>{this.drop(e,n),t(o)};this.all(e,n)}))}};function i(e){const t="string"==typeof e?[e]:[e[0]];for(let n=1,{length:o}=arguments;n<o;n++)t.push(arguments[n],e[n]);const n=document.createElement("style");return n.type="text/css",n.appendChild(document.createTextNode(t.join(""))),document.head.appendChild(n)}function a(e,t){e&&(e.value=t,((e,t)=>{document.documentElement.style.setProperty("--"+e,t)})(e.uid,e.value))}const c=/--([a-z]+[a-z0-9-]*)\s*(,\s*.+)*\)/gi;function l(e){return function({view:e,model:t={},handleEvent:s=u,style:f,children:h={},init:p}){if(!e||"function"!=typeof e)throw console.error("inputs leading to error:",{view:e,model:t,handleEvent:s,style:f,children:h}),"view property is missing!";n(),t.broadcast=function(e){let t=!1;for(const n of g)n(e)&&(t=!0);t&&r.that(o,"bound")},t.handleEvent=s;let m=function(e){let t={},o={};if(e)for(const[s,r]of Object.entries(e)){t[s]=n();let e=[...r.matchAll(c)].map((e=>{return{name:e[1],value:(t=e[2],t?.replace(/\s|,/g,"")||""),uid:n()};var t})),l=r;for(const{name:t,value:n,uid:r}of e){o[t]={value:n,uid:r};const e=new RegExp("--"+s);l=l.replace(e,"--"+r),a(o[t],n)}i`
                .${t[s]} {
                    ${l}
                }
            `}return{classNameToUid:t,setCssVariable:(e,t)=>a(o[e],t)}}(f);t.style=f?m.classNameToUid:{};let g=[];const v={info(){},render:()=>e(t,t.style,v),update(e){Object.assign(t,e),r.that(o,"updated")},model:()=>function(e){return Object.assign({},e)}(t),style:(e,t)=>m.setCssVariable(e,t),bind(e){"function"==typeof e&&g.push(e)}};for(const e of Object.keys(h)){if(-1!==d.indexOf(e))throw"Component name use a restricted sticky word";v[e]=l(h[e])}if(p)for(const[e,t]of Object.entries(p)){if(!v[e])throw"Initialization use a wrong component name";v[e].update(t)}return v}("function"==typeof e?e():e)}const d=["info","render","update","model","bind","style"];function u(){}function f(e,t,n=document.body){const s=l(e);return r.all(o,(()=>{t(n,s.render)})),s}export{f as controller,l as sticky};
